services:
  # Express.js backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: edp-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=edp_database
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_URL=postgresql://postgres:postgres@db:5432/edp_database
      - CORS_ORIGIN=http://localhost:5173,http://localhost:80
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - db
    networks:
      - edp-network
    restart: unless-stopped
    command: npm run dev

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: edp-frontend
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=http://backend:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - edp-network
    restart: unless-stopped

  # PostgreSQL database service
  db:
    image: postgres:15-alpine
    container_name: edp_database
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=edp_database
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - edp-network
    restart: unless-stopped

networks:
  edp-network:
    driver: bridge

volumes:
  postgres_data: